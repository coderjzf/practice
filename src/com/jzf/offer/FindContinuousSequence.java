package com.jzf.offer;

import java.util.ArrayList;

/*题目描述
小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。
现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!
输出描述:
输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序*/
public class FindContinuousSequence {
	public static ArrayList<ArrayList<Integer>> findContinuousSequence(int sum) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<>();

		if (sum < 3)
			return result;

		int small = 1;
		int big = 2;
		// 因为连续序列至少包含两个数 所以small增加到middle为止
		int middle = (1 + sum) / 2;
		int curSum = small + big;
		while (small < middle) {
			if (curSum < sum) {
				big++;
				curSum += big;
				continue;
			} else if (curSum > sum) {
				curSum -= small;
				small++;
				continue;
			}
			addList(result, small, big);
			big++;
			curSum+=big;
		}
		return result;
	}

	public static ArrayList<ArrayList<Integer>> addList(ArrayList<ArrayList<Integer>> result, int small, int big) {
		ArrayList<Integer> list = new ArrayList<>();
		for (int i = small; i <= big; i++) {
			list.add(i);
		}
		result.add(list);
		return result;
	}
	public static void main(String[] args) {
		findContinuousSequence(9);
	}
}
